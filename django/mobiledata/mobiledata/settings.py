"""
Django settings for mobiledata project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_PATH = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
print PROJECT_PATH


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^c9(4z5d)p4n#=llc9r@tmg@mo8tcx#b4y7&labeuznx7ng8(5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	'cm',
    # 'rest_framework',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mobiledata.urls'

WSGI_APPLICATION = 'mobiledata.wsgi.application'

TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

TEMPLATE_DIRS = (
    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(PROJECT_PATH, "templates"),
    os.path.join(PROJECT_PATH, "templates/admin"),
)


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'cmdata',
		'USER': 'root',
		'PASSWORD': 'kingsoft',
		'HOST': '127.0.0.1',
		'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(PROJECT_PATH, 'static'),
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

LOGGING = {
    'version' : 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(funcName)s %(message)s'
        },
        'standard': {
            'format': '%(levelname)s %(asctime)s %(message)s'
        },
    },
    'handlers':{
        'file_access':{
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename':os.path.join(PROJECT_PATH, "log/file_access.log"),
            'formatter': 'verbose',
        },

        'file_debug':{
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename':os.path.join(PROJECT_PATH, "log/file_debug.log"),
            'formatter': 'verbose',
        },

        'file_error':{
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename':os.path.join(PROJECT_PATH, "log/file_error.log"),
            'formatter': 'verbose',
        },

        'mobiledata_cm':{
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename':os.path.join(PROJECT_PATH, "log/mobiledata_cm.log"),
            'formatter': 'verbose',
        },

        'liehu':{
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename':os.path.join(PROJECT_PATH, "log/liehu.log"),
            'formatter': 'verbose',
        },

    },
    'loggers':{
        'accesslog':{
            'handlers': ['file_access'],
            'level': 'INFO',
            'propagate': True,
        },

        'debuglog':{
            'handlers': ['file_debug'],
            'level': 'DEBUG',
            'propagate': True,
        },

        'errorlog':{
            'handlers': ['file_error'],
            'level': 'DEBUG',
            'propagate': True,
        },

        'mobiledata_cm':{
            'handlers': ['mobiledata_cm'],
            'level': 'DEBUG',
            'propagate': True,
        },

        'liehu':{
            'handlers': ['liehu'],
            'level': 'DEBUG',
            'propagate': True,
        },

    },
}
